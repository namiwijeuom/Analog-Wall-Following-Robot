def subr (v1,v2):
    diffence = v2-v1 #voltage at positive input is positive and other will negative
    return diffence
##################
def pid (error,integral,diff):
    id_calculation=[]#first value will be integral
    prop = -error
    prop_out = 2*prop #2 is the propotional constant and need to change
    print(prop_out,'prop_out')#test###############

    inte = (integral - error/0.01) #calculate integral error # need previous error#error multiplied by the time interval and devided by capacitance
    id_calculation.append(inte)
    inte_out = inte*0.0001 #took integral constant as 0.0001 and need to change
    print(inte_out,"inte_out")#test#################

    dif = (error*0.0000001 - diff)*1000 #calculated diffrential # took time interval as 0.001 s
    id_calculation.append(error*0.0000001)
    dif_out = dif*0.5 #took diffrential coeficient as 0.5 and need to change
    print(dif_out,"dif_out")#test#####################

    pid_val = dif_out-(prop_out+inte_out)
    print(pid_val,"pid_val5") 

    return (pid_val,id_calculation)


################
#def sumr(v1,v2):

pd=[0,0]#1 integral 2 diffrential
#def robot(left_sensor,right_sensor,foward_motor):
while True:
 #left_sensor = float(input("enter sensor reading : "))
 #right_sensor = float(input("enter sensor reading : "))

    sensors = (input())
    sensors = sensors.split(',')
    for i in range(0,(len(sensors)-1)):

        left_sensor = float(sensors[i])
        right_sensor = float(sensors[i+1])
        error = subr(left_sensor,right_sensor)####
        pidf,pd = pid(error,pd[0],pd[1]) #need to add P, I, D and need to give the final output
        print(pd)

        pidf = pidf*0.0001 # set pid output for sutable value #2 is just a constant


        left_motor = 5 + pidf # i add the error generated by  the pid to the left motor but it may substract depending on the sensor
        right_motor = 5 - pidf
        pwm_signal_right = right_motor####
        print(pwm_signal_right)
        pwm_signal_left = left_motor
        print(pwm_signal_left)
        i+=1


